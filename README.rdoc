= SMS Fu (sms_fu)

Want to send an SMS from your Ruby application?  SMS Fu allows you to do just that.  
It allows you to send a text message in the form of an e-mail to a cell phone on any
of the many supported carriers.

== Supported Carriers (Canadian):

Rogers, Fido, Chatr, TELUS, Koodo, Public Mobile, Bell, Virgin Mobile, Solo Mobile, NorthwesTel, Telebec, NorthernTel, Wind Mobile, SaskTel, Videotron, MTS, TBayTel, EastLink, and PC Mobile

== Requirements

* SMS Fu requires that 'action_mailer' (>= 3.0.0rc2) is installed.

* If you require SMS Fu on an older version of ActionMailer, make sure to use the older plugin version of SMS Fu at http://github.com/brendanlim/sms-fu/tree/plugin

== Setup Instructions

* Add `gem 'sms_fu', git: 'git@github.com:matt297/sms-fu.git'` to your gemfile

* Copy sms_fu.yml from the templates folder to your config folder

* (Optional) Modify sms_fu.yml in your config folder with your reply-to e-mail address

* Add `include SMSFuHelper` to your application_helper.rb

== Numbers and Carriers

* You have to send in the phone number, without any non-numeric characters.  The
  phone numbers must be 10 digits in length.  
* The two required parameters are the phone number and the phone carrier.
* Here are some of the default carrier values:

    Bell              =>  "bell-canada"
    Koodo             =>  "koodo-canada"
    TELUS             =>  "telus-canada"
    Rogers            =>  "rogers-canada"
    Virgin Mobile     =>  "virgin-canada"
    Wind Mobile       =>  "wind-canada"

* Check sms_fu.yml for a complete list of supported carriers.

== Configuration and Usage

* SMS Fu relies on either ActionMailer for delivery.

* Specify the :delivery option as :action_mailer in your

    # ActionMailer delivery
    sms_fu = SMSFu::Client.configure(:delivery => :action_mailer)

* Basic SMS delivery

    sms_fu.deliver("5558675309","at&t","message")

* If you want to set a custom from e-mail per SMS message, you can do so
  by doing the following.

    sms_fu.deliver("5558675309","at&t","message", :from => "bob@test.com")

* You can set the maximum length of the SMS message, which is not set by
  default.  Most phones can only accept 128 characters.  To do this just
  specify the limit option.

    sms_fu.deliver("5558675309","at&t","message", :limit => 128)

* You can retrieve just the formatted address to use in your own mailer.

    SMSFu.sms_address("5558675309","at&t") # => "5558675309@txt.att.net"

== View Helpers (Rails)

* Retrieve a collection of all carriers

    <%= carrier_collection %>

* Display a select box with mobile carriers

    <%= carrier_select %>
    
* Display a custom select box with mobile carriers

    <%= carrier_select('user[carrier_name]', "Please choose a carrier") %>

== Special Thanks

I want to thank the following individuals with their help with adding some patches to SMS Fu:

* Brent Collier (brentmc79)
* Peter Boling (pboling)
* Mike (mic)

Copyright (c) 2010 Brendan G. Lim, Intridea, Inc., released under the MIT license
